@model Ginosis.Banat.MvcWebUI.Models.SemiProduct.SemiProductAddViewModel
@{
    ViewBag.Title = "Add";
    Layout = "~/Views/_LayoutPage2.cshtml";
}


<div class="card" id="newSemiProductForm">
    <div class="card-header bg-white header-elements-inline">
        <h5 class="card-title"><strong>Yeni Yarımamul Tanımlama Sayfası</strong></h5>
    </div>
    <div class="card-body">
        @using (Html.BeginForm("Add", "SemiProduct", FormMethod.Post))
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.AntiForgeryToken()

            <div class="form-group row">
                <div class="col-lg-4">
                    <div class="row">
                        <label class="col-md-3 col-form-label">Adı</label>
                        <div class="col-md-9">
                            @Html.TextBoxFor(x => x.SemiProduct.Name, new { @class = "form-control", @placeholder = "Adı", @autocomplete = "off" })
                            @Html.HiddenFor(x => x.SemiProduct.Id)
                        </div>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="row">
                        <label class="col-md-3 col-form-label">Kodu</label>
                        <div class="col-md-9">
                            @Html.TextBoxFor(x => x.SemiProduct.Code, new { @class = "form-control", @placeholder = "Kodu", maxLength = "9", @autocomplete = "off" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-lg-4">
                    <div class="row">
                        <label class="col-md-3 col-form-label">Açıklama</label>
                        <div class="col-md-9">
                            @Html.TextBoxFor(x => x.SemiProduct.Description, new { @class = "form-control", @placeholder = "Açıklama", @autocomplete = "off" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="row">
                        <label class="col-md-3 col-form-label">Kalıp</label>
                        <div class="col-md-9">
                            @Html.DropDownListFor(m => m.SelectedMoldId, new SelectList(Model.Kaliplar, "Id", "Name"), "Seçiniz",
                                new { @class = "form-control select-search", @id = "Molds", @name = "Molds" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-lg-4">
                    <div class="row">
                        <label class="col-md-3 col-form-label">Maximum Miktar</label>
                        <div class="col-md-9">
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.SemiProductDetail.ShiftMaxPiece, new { @class = "form-control nmrc", @placeholder = "Miktar" })
                                
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="row">
                        <div class="col-md-3">
                            <label class="form-check-label">
                                @Html.CheckBoxFor(x => x.CanWeight, new { @class = "form-check-input-styled", @name = "CanWeight", @id = "CanWeight" })
                                Ağırlık olarak hesaplanabilir
                            </label>
                        </div>
                        <label class="col-md-3 col-form-label">Maximum Ağırlık</label>
                        <div class="col-md-6">
                            @Html.TextBoxFor(x => x.SemiProductDetail.ShiftMaxWeight, new { @class = "form-control nmrc", @placeholder = "Ağırlık", @disable="disable", @id = "ShiftMaxWeight" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-lg-4">
                    <div class="row">
                        <label class="col-md-3 col-form-label">Üretilebileceği makineler</label>
                        <div class="col-md-5">
                            <div class="multiselect-native-select">
                                @Html.DropDownListFor(m => m.SelectedMachineVal, new SelectList(Model.MachineList, "Id", "Name"),
                     new { @class = "form-control multiselect", @id = "SelectedMachineVal", @name = "SelectedMachineVal", @multiple = "multiple" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>


            <div class="text-right">
                <button type="button" class="btn btn-primary" id="createSemiProduct">Yarımamul Oluştur</button>
            </div>

        }
    </div>
</div>

@*<div class="card" id="newSemiProductForm">
    <div class="card-header bg-white header-elements-inline">
        <h5 class="card-title"><strong>Yarımamül Formülü</strong></h5>
    </div>
    <div class="card-body">

        <div class="form-group row">
            <div class="col-lg-4">
                <div class="row">
                    <label class="col-md-3 col-form-label">Karışım</label>
                    <div class="col-md-9">
                        @Html.DropDownListFor(m => m.SelectedMixId, new SelectList(Model.Karisimlar, "Id", "DisplayName"), "Seçiniz",
                        new { @class = "form-control select-search", @id = "Mixtures", @name = "Mixtures" })
                    </div>
                </div>
            </div>

            <div class="col-lg-3">
                <div class="row">
                    <label class="col-md-3 col-form-label">Oran (%)</label>
                    <div class="col-md-9">
                        @Html.TextBoxFor(m => m.MixAmount, new { @class = "form-control dcml", @placeholder = "0" })
                    </div>
                </div>
            </div>

            <div class="col-lg-2">
                <div class="row">
                    <div class="col-md-9">
                        <button type="button" class="btn btn-success" id="addMixture" disabled><i class="icon-cart-add2 mr-2"></i> Karışım Ekle</button>
                    </div>
                </div>
            </div>

            <div class="col-lg-3">
                <div class="row">
                    <label class="col-md-6 col-form-label">Kalan Oran</label>
                    <div class="col-md-6">
                        @Html.TextBoxFor(m => m.TotalRate, new { @class = "form-control", @placeholder = "Kalan Oran", disabled = "disabled" })
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="card" id="mixedTable">
    <div class="card-header bg-white header-elements-inline">
        <h5 class="card-title"><strong>Yarı Mamül İçeriği </strong></h5>
    </div>


    <div class="card-body">

        <table class="table datatable-basic table-hover" id="MixtureGrid">
            <thead>
                <tr>
                    <th>Karışım Kodu</th>
                    <th>Miktar</th>
                    <th>İşlem</th>
                </tr>
            </thead>
        </table>

    </div>


</div>*@

@section PageScripts
{
    <script src="~/Scripts/jquery.dataTables.js"></script>
    <script src="https://cdn.datatables.net/plug-ins/1.10.19/api/sum().js"></script>
    <script type="text/javascript">


        function GetMixProducts() {

            let semiProductId = $('#SemiProduct_Id').val();

            $.ajax({
                type: 'GET',
                url: '/SemiProduct/GetMixProduct',
                data: { semiProductId: semiProductId },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    var table = $('#MixtureGrid').DataTable();
                    table.clear().draw();
                    for (var i = 0; i < data.length; i++) {

                        table.row.add([data[i].DisplayName, data[i].Rate,
                            ' <a onClick="RemoveFormation(' + data[i].Id + '); return false;" title="Çıkar"><i class="icon-cross2 text-danger"></i>Çıkar</a>'
                        ])
                            .draw()
                            .node();

                    }
                    totalPriceCalc();
                },
                error: function (data) {
                    swal({
                        title: 'Hata',
                        text: 'İşlem Hatalı. Daha Sonra Tekrar Deneyiniz!',
                        type: 'error',
                        buttonsStyling: false,
                        confirmButtonClass: 'btn btn-primary',
                    });
                }
            });
        }

        function RemoveFormation(id) {
            $.ajax({
                type: 'POST',
                url: '/SemiProduct/RemoveFormation',
                data: { id: id },
                success: successFunc,
                error: errorFunc
            });

            function successFunc(result, status) {
                if (result.IsError == false) {

                    GetMixProducts();
                }
            }

            function errorFunc() {
                alert('hata');
            }
        }


        $(document).ready(function () {

            $('#CanWeight').click(function () {

                if (this.checked) {
                    $('#ShiftMaxWeight').removeAttr("disabled");
                }
                else {
                    $('#ShiftMaxWeight').prop('disabled', 'disabled');
                }

            });

            $('.multiselect').multiselect({
                nonSelectedText: 'Seçiniz',
                allSelectedText: 'Tümü Seçili',
                nSelectedText: ' - Seçenek Seçildi',
                numberDisplayed: 0
            });
           
            $('.dcml').keypress(function (event) {
                if ((event.which != 44) && (event.which < 48 || event.which > 57)) {
                    event.preventDefault();
                }

            })


            $('.select-search').select2();
            $('.form-check-input-styled').uniform();
            createDatatable();

            $('#confirmOrder').click(function () {
                var table = $('#MixtureGrid').DataTable();
                var data = table.rows().data().toArray();
                item = {};
                for (var i = 0; i < data.length; i++) {

                    item["MixId"] = data[i][0];
                    item["MixAmount"] = data[i][1];
                    item["MixCode"] = data[i][2];
                }
                console.log(item);

                var model = {
                    allmixed: item
                }

                $.ajax({
                    type: 'POST',
                    url: '/SemiProduct/Test',
                    data: model,
                    success: successFunc,
                    error: errorFunc
                });
            });

            function successFunc() {
                alert('ok');
            }
            function errorFunc() {
                alert('hata');
            }



            $('#addMixture').click(function () {

                let semiProductId = $('#SemiProduct_Id').val();
                let mixId = $('#Mixtures').val();
                let rate = parseFloat($('#MixAmount').val());

                var table = $('#MixtureGrid').DataTable();
                var tableTotalSum = table.column(1).data().sum();
                var selectedText = $("#select2-Mixtures-container").text();
                if (!mixId > 0 || !rate > 0) {
                    swal({
                        title: 'Hata',
                        text: 'Lütfen bileşen ve oran seçiniz',
                        type: 'error',
                        buttonsStyling: false,
                        confirmButtonClass: 'btn btn-primary',
                    });
                    return;
                }
                if (table.column(0).data().toArray().includes(selectedText)) {
                    swal({
                        title: 'Hata',
                        text: 'Kayıt daha önceden eklenmiş',
                        type: 'error',
                        buttonsStyling: false,
                        confirmButtonClass: 'btn btn-primary',
                    });
                    return;
                }
                if (tableTotalSum + rate > 100 ) {
                    swal({
                        title: 'Hata',
                        text: 'Toplam oran %100 ü geçemez.',
                        type: 'error',
                        buttonsStyling: false,
                        confirmButtonClass: 'btn btn-primary',
                    });
                    return;
                }

                var model = {
                    semiProductId: semiProductId,
                    mixId: mixId,
                    rate: rate
                }

                $.ajax({
                    type: 'POST',
                    url: '/SemiProduct/AddMixToProduct',
                    data: model,
                    success: successFunc,
                    error: errorFunc
                });

                function successFunc(result, status) {
                    if (result.IsError == false) {

                        var table = $('#MixtureGrid').DataTable();
                        table.row.add([selectedText, rate,
                            ' <a onClick="RemoveFormation(' + result.Data + '); return false;" title="Çıkar"><i class="icon-cross2 text-danger"></i>Çıkar</a>'
                        ]).draw().node();

                        totalPriceCalc();

                        $('#MixAmount').val("");
                        $('#Mixtures').val("");
                        $("#select2-Mixtures-container").text("Seçiniz");
                    }
                }

            });

            $('#createSemiProduct').click(function () {

                let name = $('#SemiProduct_Name').val();
                let code = $('#SemiProduct_Code').val();
                let description = $('#SemiProduct_Description').val();
                let moldId = $('#Molds').val();
                let maxAmount = $('#SemiProductDetail_ShiftMaxPiece').val();
                let amountUnit = $('#SemiProductBirimCode').val();
                let machines = $('#SelectedMachineVal').val();
                let shiftMaxWeight = $('#ShiftMaxWeight').val();
                //var checkbox = document.getElementsByName("SelectedMachines");
                //var ary = [];
                //for (var i = 0; i < checkbox.length; i++) {
                //    if (checkbox[i].checked) {
                //        ary.push(checkbox[i].value);
                //    }
                //}



                if ($('#SemiProduct_Name').val() === null || $('#SemiProduct_Name').val() === '') {
                    swal({
                        title: 'Hata',
                        text: 'Ürün adı boş geçilemez.',
                        type: 'error',
                        buttonsStyling: false,
                        confirmButtonClass: 'btn btn-primary',
                    });
                    return;
                }
                if (code.length != 9) {
                    swal({
                        title: 'Hata',
                        text: 'Yarımamul kodu 9 hane olmalıdır.',
                        type: 'error',
                        buttonsStyling: false,
                        confirmButtonClass: 'btn btn-primary',
                    });
                    return;
                }

                if ($('#Molds').val() === null || $('#Molds').val() === '') {
                    swal({
                        title: 'Hata',
                        text: 'Kalıp Seçmeden Yarı Mamul Tanımlayamazsınız.',
                        type: 'error',
                        buttonsStyling: false,
                        confirmButtonClass: 'btn btn-primary',
                    });
                    return;
                }
                if ($('#SemiProductDetail_ShiftMaxPiece').val() == null || $('#SemiProductDetail_ShiftMaxPiece').val() == '') {
                    swal({
                        title: 'Hata',
                        text: 'Miktar bilgisi boş geçilemez.',
                        type: 'error',
                        buttonsStyling: false,
                        confirmButtonClass: 'btn btn-primary',
                    });
                    return;
                }


                if ($('#SemiProductDetail_ShiftMaxPiece').val() == '0') {
                    swal({
                        title: 'Hata',
                        text: 'Üretilebilecek Maximum Miktar Sıfır Olamaz. Kontrol Ediniz!',
                        type: 'error',
                        buttonsStyling: false,
                        confirmButtonClass: 'btn btn-primary',
                    });
                    return;
                }



                var productModel = {
                    Code: code,
                    Name: name,
                    Description: description,
                    MoldId: moldId
                }
                var semiProductDetailModel = {
                    ShiftMaxPiece: maxAmount,
                    PieceWeightCode: amountUnit,
                    ShiftMaxWeight: shiftMaxWeight
                }

                var model = {
                    SemiProduct: productModel,
                    SemiProductDetail: semiProductDetailModel,
                    SelectedMachineVal: machines
                }

                $.ajax({
                    type: 'POST',
                    url: '/SemiProduct/Add',
                    data: model,
                    async: false,
                    success: successFunc,
                    error: errorFunc
                });
                function successFunc(result, status) {
                    if (result.IsError == true) {
                        swal({
                            title: 'Hata',
                            text: result.Message,
                            type: 'error',
                            buttonsStyling: false,
                            confirmButtonClass: 'btn btn-primary',
                            confirmButtonText: 'Tamam'
                        });
                    } else if (result.Data > 0) {
                         $('#SemiProduct_Id').val(result.Data);
                        $("#addMixture").attr("disabled", false);
                        swal({
                            title: 'Onay!',
                            text: 'Yarımamul Tanımlama İşlem Başarıyla Tamamlandı. Karışımları ekleyebilirsiniz.',
                            type: 'success',
                            buttonsStyling: false,
                            confirmButtonClass: 'btn btn-primary',
                            confirmButtonText: 'Tamam'
                       }).then((result) => {
                                            if (result.value) {
                                                console.log('Tamam Butonuna Basıldı');
                                                var id = $('#SemiProduct_Id').val();
                                                var url ='@Url.Action("Update", "SemiProduct")?SemiProductId=' + id;
                                                //window.open(url);
                                                window.location.href = url;
                                            }
                                        });
                    }
                }
                function errorFunc(result, status) {
                    swal({
                        title: 'Hata',
                        text: 'Yarımamul Tanımlama İşlem Hatalı. Daha Sonra Tekrar Deneyiniz!',
                        type: 'error',
                        buttonsStyling: false,
                        confirmButtonClass: 'btn btn-primary',
                        confirmButtonText: 'Tamam'

                    });
                }

            });

        })

        function createDatatable() {
            $('#MixtureGrid').DataTable({
                dom: '<"datatable-header"fl><"datatable-scroll"t><"datatable-footer"ip>',
                "language": {
                    "url": "/Scripts/dil.json",

                },
                searching: false,
                paging: true,
                "bInfo": false,
                "bLengthChange": false,

            });

            $.extend($.fn.dataTableExt.oSort, {
                "turkish-pre": function (a) {
                    var special_letters = {
                        "C": "Ca", "c": "ca", "Ç": "Cb", "ç": "cb",
                        "G": "Ga", "g": "ga", "Ğ": "Gb", "ğ": "gb",
                        "I": "Ia", "ı": "ia", "İ": "Ib", "i": "ib",
                        "O": "Oa", "o": "oa", "Ö": "Ob", "ö": "ob",
                        "S": "Sa", "s": "sa", "Ş": "Sb", "ş": "sb",
                        "U": "Ua", "u": "ua", "Ü": "Ub", "ü": "ub"
                    };
                    for (var val in special_letters)
                        a = a.split(val).join(special_letters[val]).toLowerCase();
                    return a;
                },

                "turkish-asc": function (a, b) {
                    return ((a < b) ? -1 : ((a > b) ? 1 : 0));
                },

                "turkish-desc": function (a, b) {
                    return ((a < b) ? 1 : ((a > b) ? -1 : 0));
                }
            });
        }

        function totalPriceCalc() {

            var table = $('#MixtureGrid').DataTable();
            var tableTotalSum = table.column(1).data().sum();
            //var data = parseFloat($('#MixAmount').val().toString().replace(',', '.'));
            var resultTotalSum = parseFloat(100 - tableTotalSum).toFixed(2);


            $('#TotalRate').val(resultTotalSum.toString().replace('.', ','));

            if (resultTotalSum != 0) {

                $('#TotalRate').css('background-color', 'red');
            } else {
                $('#TotalRate').css('background-color', 'white');
            }


        }

    </script>
}

