@model Ginosis.Banat.MvcWebUI.Models.WorkOrder.AddWorkOrderViewModel
@{
    ViewBag.Title = "NewTask";
    Layout = "~/Views/_LayoutPage2.cshtml";
}

@using (Html.BeginForm("WorkOrderList", "WorkOrder", FormMethod.Post))
{

    <div class="card">
        <div class="card-header header-elements-inline">
            <h6 class="card-title">İş Emri Oluştur</h6>
        </div>
        <div class="card-body">
            <div class="form-group row">
                <div class="col-lg-2">
                    <div class="row">
                        <label class="col-md-3 col-form-label">Tarih:</label>
                        <div class="col-md-9">
                            @Html.TextBoxFor(x => x.WorkOrderDate, new { @placeholder = "Tarih", @class = "form-control", @name = "WorkOrderDate", @id = "WorkOrderDate", @autocomplete = "off" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-2">
                    <div class="row">
                        <label class="col-md-3 col-form-label">Makine:</label>
                        <div class="col-md-9">
                            @Html.DropDownListFor(x => x.SelectedMachineId, new SelectList(Model.MachineList, "Id", "Name"), "Seçiniz", new { @class = "form-control select-access-value", @id = "SelectedMachineId", @name = "SelectedMachineId" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-2">
                    <div class="row">
                        <label class="col-md-4 col-form-label">Vardiya:</label>
                        <div class="col-md-8">
                            @Html.DropDownListFor(x => x.UserId, new SelectList(Model.ShiftList, "Id", "Name"), "Seçiniz", new { @class = "form-control select-access-value", @id = "SelectedShiftId", @name = "SelectedShiftId" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-2">
                    <div class="row">
                        <div class="col-md-12">
                            <button type="button" class="btn btn-primary col-md-12" id="openDetailDoc"><i class="icon-search4 font-size-base mr-2"></i> Reçete Görüntüle</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>




    <div class="card" id="workorderlist">
        <div class="card-header bg-white header-elements-inline">
            <h5 class="card-title"><strong>Görevler</strong></h5>
        </div>

        <div class="card-body">

            <table class="table datatable-basic" id="WorkOrderList">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Üretilecek Tarih</th>
                        <th>Makina</th>
                        <th>Vardiya</th>
                        <th>Personel</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>

                    @for (int y = 0; y < Model.WorkOrderListDtos.Count; y++)
                    {
                        <tr>
                            @Html.HiddenFor(x => Model.WorkOrderListDtos[y].WorkOrderId)
                            <td>@Model.WorkOrderListDtos[y].WorkOrderId</td>
                            <td>@Model.WorkOrderListDtos[y].MachineCode-@Model.WorkOrderListDtos[y].MachineName</td>
                            <td>@Model.WorkOrderListDtos[y].ShiftName</td>
                            <td>@Model.WorkOrderListDtos[y].PlannedDate.Value.ToString("dd/MM/yyyy")</td>
                            <td>

                                @Html.DropDownListFor(m => Model.WorkOrderListDtos[y].EmployeeId, new SelectList(Model.Employees, "Id", "DisplayName", Model.WorkOrderListDtos[y].EmployeeId),
                                    new { @class = "form-control select-search", @id = "WorkOrderListDtos[" + y + "]_EmployeeId", @name = "WorkOrderListDtos[" + y + "]_EmployeeId" })
                            </td>
                            <td>
                                @for (int i = 0; i < Model.WorkOrderListDtos[y].WorkOrderProducts.Count; i++)
                                {
                                    <div class="row">
                                        @Html.HiddenFor(x => Model.WorkOrderListDtos[y].WorkOrderProducts[i].WorkOrderProductId)
                                        @Html.Label(Model.WorkOrderListDtos[y].WorkOrderProducts[i].SemiProductName)
                                    </div>
                                }
                            </td>
                            <td>
                                @for (int i = 0; i < Model.WorkOrderListDtos[y].WorkOrderProducts.Count; i++)
                                {
                                    <div class="row">
                                        @Html.Label(Model.WorkOrderListDtos[y].WorkOrderProducts[i].PlannedAmount.ToString())
                                    </div>
                                }

                            </td>
                            <td>
                                @for (int i = 0; i < Model.WorkOrderListDtos[y].WorkOrderProducts.Count; i++)
                                {
                                    <div class="row">
                                        @Html.TextBoxFor(x => Model.WorkOrderListDtos[y].WorkOrderProducts[i].DailyCompletedAmount, new { @class = "form-control", @placeholder = "Miktar" })
                                    </div>
                                }
                            </td>
                            <td class="text-center">
                                <div class="list-icons">
                                    <div class="dropdown">
                                        <a href="#" class="list-icons-item" data-toggle="dropdown" aria-expanded="false">
                                            <i class="icon-menu9"></i>
                                        </a>
                                        <div class="dropdown-menu dropdown-menu-right" x-placement="bottom-end" style="position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(22px, 19px, 0px);">
                                            <a href="/WorkOrder/WrkOrdDetail?wrkOrdId=@Model.WorkOrderListDtos[y].WorkOrderId" class="dropdown-item"><i class="icon-pencil"></i>Görüntüle</a>
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>

        <div class="text-center btn btn-primary btn-lg btn-block">
            <button type="submit" class="btn btn-primary">Güncelle</button>
        </div>

    </div>


}


<div class="card" id="workOrder">
    <div class="card-body">
        <div class="media mb-3">
            <a href="#" class="mr-3 align-self-center">
                <img src="../../../../global_assets/images/placeholders/placeholder.jpg" class="rounded" width="44" height="44" alt="">
            </a>
            <input type="hidden" id="DetailPlanId" />
            <div class="media-body">
                <h5 class="media-title font-weight-semibold" id="SemiProductName"></h5>
                <ul class="list-inline list-inline-dotter text-muted mb-0">
                    <li class="list-inline-item" id="SemiProductDetailInfo"></li>
                </ul>
            </div>
        </div>


        <div class="mb-4">
            <h6 class="font-weight-semibold" id="workOrderDetail">İş Emri Detayı</h6>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group row">
                        <label class="col-lg-3 col-form-label">Üretilecek Tarih:</label>
                        <div class="col-lg-9">
                            <label type="text" class="col-form-label text-danger" id="ProduceDate" name="ProduceDate" />
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group row">
                        <label class="col-lg-3 col-form-label">Üretilecek Miktar:</label>
                        <div class="col-lg-9">
                            <label type="text" class="col-form-label text-danger" id="planedAmount" name="planedAmount" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group row">
                        <label class="col-lg-3 col-form-label">Makine Press Kodu:</label>
                        <div class="col-lg-9">
                            <label type="text" class="col-form-label" id="MachineCode" name="MachineCode" />
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group row">
                        <label class="col-lg-3 col-form-label">Vardiya:</label>
                        <div class="col-lg-9">
                            <label type="text" class="col-form-label" id="ShiftCode" name="ShiftCode" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="d-sm-flex">

            <div class="ml-sm-auto mt-2 mt-sm-0">
                @Html.DropDownListFor(x => x.UserId, new SelectList(Model.UserList, "Id", "UserName"), "Operatör Seçiniz", new { @class = "form-control select-search", @id = "UserId", @name = "UserId" })
            </div>

            <div class="ml-sm-3 mt-2 mt-sm-0">
                <a href="#" class="btn btn-success" id="assignToEmployee"><i class="icon-checkmark3 mr-2"></i> Görevi Ata</a>
            </div>
        </div>
    </div>
</div>


<div class="card" id="workOrderPrdDtl">
    <div class="table-responsive">
        <table class="table text-nowrap" id="Detail">
            <thead>
                <tr>
                    <th>Malzeme Kodu</th>
                    <th>Malzeme Adı</th>
                    <th>Oran</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
</div>


@section PageScripts{

    <script>

        window.addEventListener('DOMContentLoaded', (event) => {

            $('#workOrder').hide();
            $('#workOrderPrdDtl').hide();

            $('.select-search').select2();


            $('#WorkOrderDate').daterangepicker({
                singleDatePicker: true,
                locale: {
                    format: 'DD/MM/YYYY'

        $('#assignToEmployee').click(function () {
         
            swal({
                title: `Dikkat!`,//`My name is ${person.name}.`,
                //text: 
                type: 'info',
                html: '<span class="font-weight-semibold">' + $('#SemiProductName').text() + '</span> ürünü için <span class="text-dander font-weight-semibold">' + $('#planedAmount').text() + " Adet</span> Üretim Görevini <span class='text-danger font-weight-semibold'>" + $('#UserId option:selected').text() + " </span> isimli operatöre  atamak istediğinize emin misiniz?",
                showCancelButton: true,
                buttonsStyling: false,
                confirmButtonClass: 'btn btn-success',
                cancelButtonClass: 'btn btn-danger',
                cancelButtonText: 'Hayır',
                confirmButtonText: 'Evet',
                reverseButtons: true
            }).then((result) => { 
                if (result.value) {
                   
                    $.ajax({
                        type: "GET",
                        url: "/WorkOrder/AssignTask",
                        contentType: "application/json; charset=utf-8",
                        async: false,
                        data: {
                            dpId: $('#DetailPlanId').val(),
                            userId: $('#UserId').val()
                        },
                        success: function (data, status) {
                            assingTaskSuccess(data, status);
                        },
                        error: function (data, status) {
                            assigTaskError(data, status);
                        }
                    })
                }
                else if (result.dismiss === swal.DismissReason.cancel)/* Silmekten Vazgeçti */
                {
                    console.log('Hayır');
                }
            });


            $('#assignToEmployee').click(function () {

                swal({
                    title: `Dikkat!`,//`My name is ${person.name}.`,
                    //text:
                    type: 'info',
                    html: '<span class="font-weight-semibold">' + $('#SemiProductName').text() + '</span> ürünü için <span class="text-dander font-weight-semibold">' + $('#planedAmount').text() + " Adet</span> Üretim Görevini <span class='text-danger font-weight-semibold'>" + $('#UserId option:selected').text() + " </span> isimli operatöre  atamak istediğinize emin misiniz?",
                    showCancelButton: true,
                    buttonsStyling: false,
                    confirmButtonClass: 'btn btn-success',
                    cancelButtonClass: 'btn btn-danger',
                    cancelButtonText: 'Hayır',
                    confirmButtonText: 'Evet',
                    reverseButtons: true
                }).then((result) => {
                    if (result.value) {
                        alert($('#DetailPlanId').val());

                        $.ajax({
                            type: "GET",
                            url: "/WorkOrder/AssignTask",
                            contentType: "application/json; charset=utf-8",
                            data: {
                                dpId: $('#DetailPlanId').val(),
                                userId: $('#UserId').val()
                            },
                            success: function (data, status) {
                                assingTaskSuccess(data, status);
                            },
                            error: function (data, status) {
                                assigTaskError(data, status);
                            }
                        })
                    }
                    else if (result.dismiss === swal.DismissReason.cancel)/* Silmekten Vazgeçti */ {
                        console.log('Hayır');
                    }
                });
            });



            $('#openDetailDoc').click(function () {
                var model = {
                    SelectedShiftId: $('#SelectedShiftId').val(),
                    SelectedMachineId: $('#SelectedMachineId').val(),
                    WorkOrderDate: moment($('#WorkOrderDate').val(), 'DD/MM/YYYY').format('YYYY/MM/DD')
                }
                $.ajax({
                    type: "GET",
                    url: "/WorkOrder/GetPlanDetailForWo",
                    contentType: "application/json; charset=utf-8",
                    data: model,
                    async: false,
                    success: function (data, status) {

                        if (data.PlanDetailDto !== null) {
                            $('#workOrder').show();
                            $('#workOrderPrdDtl').show();
                            $('#DetailPlanId').val(data.PlanDetailDto.DpId);
                            $('#SemiProductName').text(data.PlanDetailDto.SemiProductName);
                            $('#SemiProductDetailInfo').text(data.PlanDetailDto.SemiProductCode + " " + data.PlanDetailDto.SemiProductDescription);
                            $('#planedAmount').text(data.PlanDetailDto.MGPAmount);
                            $('#MachineCode').text(data.PlanDetailDto.MachineCode + " " + data.PlanDetailDto.MachineName);
                            $('#ShiftCode').text(data.PlanDetailDto.ShiftName);
                            var MyDate_String_Value = data.PlanDetailDto.DpDate
                            var wrkDate = new Date(parseInt(MyDate_String_Value.replace(/(^.*\()|([+-].*$)/g, '')));

                            console.log(moment(wrkDate).valueOf())
                            $('#ProduceDate').text(moment(wrkDate).format('DD/MM/YYYY'));
                            for (var i = 0; i < data.mixBySemiProductDto.length; i++) {

                                $('#Detail > tbody').append('<tr class="table-active table-border-double">' +
                                    '<td colspan="6">' + data.mixBySemiProductDto[i].MixtureCode + ' ' + data.mixBySemiProductDto[i].MixtureName + '</td> </tr>');

                                $.ajax({
                                    type: "GET",
                                    url: "/WorkOrder/GetComponentForMix",
                                    contentType: "application/json; charset=utf-8",
                                    dataType: "json",
                                    async: false,
                                    data: {
                                        mixId: data.mixBySemiProductDto[i].MixtureId
                                    },
                                    success: function (data, status) {
                                        for (var j = 0; j < data.length; j++) {
                                            debugger;
                                            $('#Detail > tbody').append('<tr>' +
                                                '<td><span class="text-muted">' + data[j].ComponentCode + '</span></td>' +
                                                '<td><span class="text-success-600">' + data[j].ComponentName + '</span></td>' +
                                                '<td><h6 class="font-weight-semibold mb-0">' + data[j].ComponentRate + '</h6></td></tr >');
                                        }

                                    },
                                    error: function (xhr, status, err) {
                                        alert('error')

                                    }
                                })

                            }

                        } else {
                            swal({
                                title: 'Hata',
                                text: 'Seçilen kriterler için kayıt bulunamadı.',
                                type: 'warning',
                                showCancelButton: false,
                                buttonsStyling: false,
                                confirmButtonClass: 'btn btn-primary',
                                confirmButtonText: 'Tamam'
                            });


                        }


                    },
                    error: function (xhr, status, err) {
                        swal({
                            title: 'Hata',
                            text: 'İşlem Sırasında Hata Alındı. Sistem Yöneticinize İletiniz.',
                            type: 'error',
                            showCancelButton: false,
                            buttonsStyling: false,
                            confirmButtonClass: 'btn btn-primary',
                            confirmButtonText: 'Tamam'
                        });

                    }
                });

            })
        })
<<<<<<< HEAD


        function assingTaskSuccess(data, status) {
            console.log(13123);
            console.log(data);
            var id = data.ResultValue.Id;
            swal({
                title: 'Onay!',
                text: 'İşlem Başarıyla Tamamlandı',
                type: 'success',
                buttonsStyling: false,
                confirmButtonClass: 'btn btn-primary',
                confirmButtonText: 'Tamam'
            }).then(function () {


                window.location = "/WorkOrder/WrkOrdDetail?wrkOrdId=" + id;
            });;

        }
        function assigTaskError(data, status) {
            alert('Hatalı3');
        }

    </script>

=======
    })


    function assingTaskSuccess(data, status) {
        var id = data.ResultValue.Id;
        swal({
            title: 'Onay!',
            text: 'İşlem Başarıyla Tamamlandı',
            type: 'success',
            buttonsStyling: false,
            confirmButtonClass: 'btn btn-primary',
            confirmButtonText: 'Tamam'
        }).then(function () {
           
            window.location = "/WorkOrder/WrkOrdDetail?wrkOrdId="+id;
        });;

    }
    function assigTaskError(data, status) {
        alert('Hatalı3');
    }

 </script>    
    
>>>>>>> DEVELOPMENT
}

