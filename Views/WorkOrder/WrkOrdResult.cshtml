@model Ginosis.Banat.MvcWebUI.Models.WorkOrder.WorkOrderDetailViewModel
@{
    ViewBag.Title = "İş Emri Sonucu";
    Layout = "~/Views/_LayoutPage2.cshtml";
}
@*<input type="hidden" id="WorkOrderId" />*@
@Html.HiddenFor(x => x.WorkOrderId, new { id = "WorkOrderId" });
<div class="card">
    <div class="card-body">
        <div class="media flex-column flex-md-row mb-4">
            <a href="#" class="align-self-md-center mr-md-3 mb-2 mb-md-0">
                <img src="../../../../global_assets/images/placeholders/placeholder.jpg" class="rounded" width="44" height="44" alt="">
            </a>

            <div class="media-body">
                <h5 class="media-title font-weight-semibold" id="SemiProductName">@Model.PlanDetailDto.SemiProductName</h5>
                <ul class="list-inline list-inline-dotted text-muted mb-0">
                    <li class="list-inline-item" id="SemiProductDetailInfo" @Model.PlanDetailDto.SemiProductCode @Model.PlanDetailDto.SemiProductDescription</li>
                </ul>
            </div>
        </div>

        <div class="mb-4">
            <h6 class="font-weight-semibold" id="workOrderDetail">İş Emri Detayı</h6>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group row">
                        <label class="col-lg-3 col-form-label">Üretilecek Tarih:</label>
                        <div class="col-lg-9">
                            @*<label type="text" class="col-form-label text-danger" id="ProduceDate" name="ProduceDate"/>*@
                            @Html.LabelFor(x => x.PlanDetailDto.DpDate, Model.PlanDetailDto.DpDate.Value.ToString("dd/MM/yyyy"), new { @class = "col-form-label text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group row">
                        <label class="col-lg-3 col-form-label">Üretilecek Miktar:</label>
                        <div class="col-lg-9">
                            @* <label type="text" class="col-form-label text-danger" id="planedAmount" name="planedAmount" />*@
                            @Html.LabelFor(x => x.PlanDetailDto.DpDate, Model.PlanDetailDto.MGPAmount.ToString(), new { @class = "col-form-label text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group row">
                        <label class="col-lg-3 col-form-label">Makine Press Kodu:</label>
                        <div class="col-lg-9">
                            @Html.LabelFor(x => x.PlanDetailDto.DpDate, Model.PlanDetailDto.MachineCode + " " + Model.PlanDetailDto.MachineName, new { @class = "col-form-label" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group row">
                        <label class="col-lg-3 col-form-label">Vardiya:</label>
                        <div class="col-lg-9">
                            @Html.LabelFor(x => x.PlanDetailDto.DpDate, Model.PlanDetailDto.ShiftName, new { @class = "col-form-label" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="card">
    <div class="card-body">
        <div class="form-group row">
            <div class="col-lg-3">
                <div class="row">
                    <label class="col-md-5 col-form-label">Gerçekleşen Miktar:</label>
                    <div class="col-md-7">
                        @Html.TextBoxFor(x => x.ProducedAmount, new { @class = "form-control", @placeholder = "Gerçekleşen Miktar", @name = "ProducedAmount", @id = "ProducedAmount" })
                    </div>
                </div>
            </div>
            <div class="col-lg-3">
                <div class="row">
                    <label class="col-md-5 col-form-label">Duruş Zamanı:</label>
                    <div class="col-md-7">
                        @Html.TextBoxFor(x => x.StoppedTime, new { @class = "form-control",  @name = "StoppedTime", @id = "StoppedTime" })
                    </div>
                </div>
            </div>
            <div class="col-lg-2">
                <div class="row">
                    <div class="col-md-12">
                        <button type="button" class="btn btn-success" id="saveWrkResult">Kaydet</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section PageScripts{

    <script src="~/global_assets/js/plugins/pickers/anytime.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#StoppedTime').AnyTime_picker({
                format: '%H:%i'
            });

            $('#saveWrkResult').click(function () {
                var model = {
                    WorkOrderId: $('#WorkOrderId').val(),
                    ProducedAmount: $('#ProducedAmount').val(),
                    StoppedTime:$('#StoppedTime').val()
                }
                $.ajax({
                    type: 'POST',
                    url: '/WorkOrder/AddProducedResult',
                    data: model,
                    success: successFunc,
                    error: errorFuncCompt
                });

                function successFunc(result, status) {
                    console.log(result);
                    if (result.ReturnCode == 0) {
                        swal({
                            title: 'Onay!',
                            text: result.ReturnMessage,
                            type: 'success',
                            buttonsStyling: false,
                            confirmButtonClass: 'btn btn-primary',
                            confirmButtonText: 'Tamam'
                        });
                    }
                    else {
                        swal({
                            title: 'Hata!',
                            text: result.ReturnMessage,
                            type: 'error',
                            buttonsStyling: false,
                            confirmButtonClass: 'btn btn-primary',
                            confirmButtonText: 'Tamam'
                        });
                    }
                }

                function errorFuncCompt(result, status) {
                    swal({
                        title: 'Hata',
                        text: 'Üretim Sonucu Ekleme İşlemi Hatalı. Daha Sonra Tekrar Deneyiniz!',
                        type: 'error'
                    });
                }

            })


        });
    </script>
}

